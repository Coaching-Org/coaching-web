# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  node: circleci/node@5.1.0
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2204:current
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: '22'
      - run:
          name: "Install dependencies"
          command: "npm ci"
      - run:
          name: "Build"
          command: npm run build
      - run:
          name: "Build image"
          command: docker build -f .docker/Dockerfile --tag $DOCKER_IMAGE_NAME .
      - run:
          name: "Export Docker Image"
          command: "docker save $DOCKER_IMAGE_NAME -o $CIRCLE_WORKING_DIRECTORY/$DOCKER_IMAGE_NAME.tar"
      - run:
          name: "Push image to server"
          command: cat $CIRCLE_WORKING_DIRECTORY/$DOCKER_IMAGE_NAME.tar | docker --context remote load
  deploy:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2204:current
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Setup config"
          command: |
            docker stack config -c .docker/docker-compose.yml > app.docker-compose.yml
      - run:
          name: "Deploy"
          command: |
            docker --context remote stack deploy --compose-file app.docker-compose.yml booking-apps-frontend-$ENV
      - run:
          name: "Prune image"
          command: |
            docker --context remote image prune -af
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
                - development
          pre-steps:
            - add_ssh_keys:
                fingerprints:
                  - "SHA256:i3LhpgQ5B+F22BjwpAff4oVfmvCqKSLO1VhQIqXX304"
            - run:
                name: "Prepare Docker Context"
                command: |
                  docker context create remote --docker "host=ssh://deploy@46.250.229.137"
            - when:
                condition:
                  equal: [ main, << pipeline.git.branch >> ]
                steps:
                  - run:
                      name: Setup Environment Variables (Production)"
                      command: |
                        echo 'export ENV=`echo prod`' >> "$BASH_ENV"
            - when:
                condition:
                  equal: [ development, << pipeline.git.branch >> ]
                steps:
                  - run:
                      name: Setup Environment Variables (Development)"
                      command: |
                        echo 'export ENV=`echo dev`' >> "$BASH_ENV"
            - run:
                name: Setup Mandatory Environment Variables
                command: |
                  echo 'export CIRCLE_SHA1_SHORT=`echo $CIRCLE_SHA1 | cut -c 1-8`' >> "$BASH_ENV"
                  echo 'export DOCKER_IMAGE_NAME=`echo booking-apps-frontend:$CIRCLE_SHA1_SHORT-$ENV`' >> "$BASH_ENV"
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - development
          pre-steps:
            - add_ssh_keys:
                fingerprints:
                  - "SHA256:i3LhpgQ5B+F22BjwpAff4oVfmvCqKSLO1VhQIqXX304"
            - run:
                name: "Prepare Docker Context"
                command: |
                  docker context create remote --docker "host=ssh://deploy@46.250.229.137"
            - when:
                condition:
                  equal: [ main, << pipeline.git.branch >> ]
                steps:
                  - run:
                      name: Setup Environment Variables (Production)
                      command: |
                        echo 'export ENV=`echo prod`' >> "$BASH_ENV"
                        echo 'export EXPOSED_PORT=`echo 4000`' >> "$BASH_ENV"
            - when:
                condition:
                  equal: [ development, << pipeline.git.branch >> ]
                steps:
                  - run:
                      name: Setup Environment Variables (Development)
                      command: |
                        echo 'export ENV=`echo dev`' >> "$BASH_ENV"
                        echo 'export EXPOSED_PORT=`echo 4001`' >> "$BASH_ENV"
            - run:
                name: Setup Mandatory Environment Variables
                command: |
                  echo 'export CIRCLE_SHA1_SHORT=`echo $CIRCLE_SHA1 | cut -c 1-8`' >> "$BASH_ENV"
                  echo 'export DOCKER_IMAGE_NAME=`echo booking-apps-frontend:$CIRCLE_SHA1_SHORT-$ENV`' >> "$BASH_ENV"